+----------------------------------
  Closure demo function
----------------------------------+
#driver "cj"

-- this function is a "closure"
def gen(min, max ε N) => (me() ε Z):
  new s := min ε N;    
  def me() => (r ε Z):
     when s ≤ max:
       let r := s;      
       let s += 1;
     else:
       let r := -1;
     when; 
  def;
def;

-- use gen to create one closure instance: 
new foo := gen(10,20);
new x := 0;
cycle:
  stop if (x = -1);
  let x := foo();  
  say (x,",");
cycle;
write; 
over;
--expect: 10,11,12,13,14,15,16,17,18,19,20, 